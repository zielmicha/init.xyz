from pipes import quote
from io import StringIO
from os.path import expanduser, dirname, join
from .utils import symlink_and_move_old_to_backup, mkdir, write_file
from .vars import xyzdir, xyzconfigdir
from .session import SessionPlugin

class Zsh(SessionPlugin):
    def __init__(self, session):
        super().__init__(session)

        self.postpath = []
        self.prepath = []
        self.includes = []

    def enable(self):
        self.session.assert_root()
        self.session.add_end_func(self._generate_zshrc)

    def append_path(self, *directories):
        self.postpath += list(directories)

    def prepend_path(self, *directories):
        self.prepath = self.prepath + list(directories)

    def include(self, file):
        self.includes.append(file)

    def _make_content(self):
        out = StringIO()

        out.write('# Generated by init.xyz. Do not edit.\n')
        out.write('export PATH=' + (':'.join([ quote(expanduser(seg)) for seg in self.prepath ] +
                                             ['"$PATH"'] + [ quote(expanduser(seg)) for seg in self.postpath ])) + '\n')
        for fn in self.includes:
            out.write('source %s\n' % join(xyzconfigdir, fn))

        return out.getvalue()

    def _generate_zshrc(self):
        is_root = self.session.is_root()
        if is_root:
            zshrc_loc = xyzdir + '/var/zshrc'
        else:
            zshrc_loc = xyzdir + '/var/zshrc_%s' % self.session.name

        write_file(path=zshrc_loc, data=self._make_content())

        mkdir(dirname(zshrc_loc))
        symlink_and_move_old_to_backup(zshrc_loc, expanduser('~/.zshrc'))

zsh = Zsh.dynamic_instance()
